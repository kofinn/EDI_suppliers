@using EDI_suppliers.Data

@page "/suppliersmfg"

@inject HttpClient Http
@inject CustomHttpClient Http
@inject AppSettingsService AppSettingsService
@inject AuthenticationStateProvider AuthenticationStateProvider

<h2>Přehled MFG Dodavatelů</h2>

@if (supplierMFGs == null || connectionEdis == null)
{
    <MatProgressBar Indeterminate="true"></MatProgressBar>
}
else
{
    <MatTable Items="@supplierMFGs" class="mat-elevation" LoadInitialData="true" Striped="true" AllowSelection="true" ShowFooter="false" ShowPaging="false" PageSize="999999">
        <MatTableHeader>
            <th>Dodavatel MFG</th>
            <th>Jméno dodavatele</th>
            <th>Kontakt IT</th>
            <th>Kontakt Log</th>
            <th>EDI Partner</th>
            <th>Akce</th>
        </MatTableHeader>
        <MatTableRow Context="supplierMFGRow">
            <td>@supplierMFGRow.MfgId</td>
            <td>@supplierMFGRow.Name</td>
            <td>@supplierMFGRow.ContactIt</td>
            <td>@supplierMFGRow.ContactLog</td>
            <td>@supplierMFGRow.ConnectionEdi</td>
            <td>
                <MatIconButton Icon="edit" OnClick="@(() => OpenEditDialog(supplierMFGRow.Id))"></MatIconButton>
                <MatIconButton Icon="delete" OnClick="@(() => OpenDeleteDialog(supplierMFGRow.Id))"></MatIconButton>
            </td>
        </MatTableRow>
    </MatTable>

    <MatIconButton Icon="add" OnClick="@(() => OpenAddDialog())"></MatIconButton>

    <MatDialog @bind-IsOpen="@deleteDialogOpen" Style="z-index:100">
        <MatDialogTitle><MatIcon Icon="warning"></MatIcon> Confirm Delete</MatDialogTitle>
        <MatDialogContent>
            Opravdu chcete vymazat dodavatele "@supplierMFG.MfgId" ?
        </MatDialogContent>
        <MatDialogActions>
            <MatButton OnClick="@(e => { deleteDialogOpen = false; })">Zpět</MatButton>
            <MatButton OnClick="@Delete">Vymazat</MatButton>
        </MatDialogActions>
    </MatDialog>

    <MatDialog @bind-IsOpen="@editDialogOpen" Style="z-index:100">
        <MatDialogTitle><MatIcon Icon="edit"></MatIcon> Úprava záznamu</MatDialogTitle>
        <MatDialogContent>
            <EditForm Model="@supplierMFG" OnValidSubmit="@Edit">
                <DataAnnotationsValidator />
                <p>
                    <MatTextField Label="Dodavatelské číslo MFG" @bind-Value="@supplierMFG.MfgId" />
                    <ValidationMessage For="@(() => supplierMFG.MfgId)" />
                </p>
                <p>
                    <MatTextField Label="Jméno dodavatele" @bind-Value="@supplierMFG.Name" />
                    <ValidationMessage For="@(() => supplierMFG.Name)" />
                </p>
                <p>
                    <MatTextField Label="Kontakt IT" @bind-Value="@supplierMFG.ContactIt" />
                    <ValidationMessage For="@(() => supplierMFG.ContactIt)" />
                </p>
                <p>
                    <MatTextField Label="Kontakt Logistika" @bind-Value="@supplierMFG.ContactLog" />
                    <ValidationMessage For="@(() => supplierMFG.ContactLog)" />
                </p>
                @*<p>
                        <MatTextField Label="EDI spojení" @bind-Value="@supplierMFG.ConnectionEdi.Name" />
                        <ValidationMessage For="@(() => supplierMFG.ConnectionEdi.Name)" />
                    </p>*@
                <p>
                    @*<MatAutocompleteList Items="@connectionEdis" TItem="ConnectionEdi" Label="Vyber EDI" CustomStringSelector="@(i => i.Name)" @bind-Value="@connectionEdi" Context="edi">
                            <ItemTemplate>
                                <div style="display: flex; flex-direction: row; width: 100%;">
                                    <div style="flex: 1;">@edi.Name</div>
                                    <div style="width: 150px;">@edi.SSID</div>
                                </div>
                            </ItemTemplate>
                        </MatAutocompleteList>*@
                </p>
                <MatButton Type="submit" Raised="true">Upravit</MatButton>
                <MatButton OnClick="@(async e => { editDialogOpen = false; await OnInitializedAsync();})">Zpět</MatButton>
            </EditForm>
        </MatDialogContent>
        @*<MatDialogActions>
                <MatButton OnClick="@(e => { editDialogOpen = false; })">Zpět</MatButton>
                <MatButton OnClick="@Edit">Upravit</MatButton>
            </MatDialogActions>*@
    </MatDialog>

    <MatDialog @bind-IsOpen="@addDialogOpen" Style="z-index:100">
        <MatDialogTitle><MatIcon Icon="add"></MatIcon> Vytvoření záznamu</MatDialogTitle>
        <MatDialogContent>
            <EditForm Model="@supplierMFG" OnValidSubmit="@Add">
                <DataAnnotationsValidator />
                <p>
                    <MatTextField Label="Dodavatelské číslo MFG" @bind-Value="@supplierMFG.MfgId" />
                    <ValidationMessage For="@(() => supplierMFG.MfgId)" />
                </p>
                <p>
                    <MatTextField Label="Jméno dodavatele" @bind-Value="@supplierMFG.Name" />
                    <ValidationMessage For="@(() => supplierMFG.Name)" />
                </p>
                <p>
                    <MatTextField Label="Kontakt IT" @bind-Value="@supplierMFG.ContactIt" />
                    <ValidationMessage For="@(() => supplierMFG.ContactIt)" />
                </p>
                <p>
                    <MatTextField Label="Kontakt Logistika" @bind-Value="@supplierMFG.ContactLog" />
                    <ValidationMessage For="@(() => supplierMFG.ContactLog)" />
                </p>
                <MatButton Type="submit" Raised="true">Vytvořit</MatButton>
                <MatButton OnClick="@(async e => { addDialogOpen = false; await OnInitializedAsync();  })">Zpět</MatButton>
            </EditForm>
        </MatDialogContent>
        @*<MatDialogActions>
                <MatButton OnClick="@(e => { addDialogOpen = false; })">Zpět</MatButton>
                <MatButton OnClick="@Add">Vytvořit</MatButton>
            </MatDialogActions>*@
    </MatDialog>


}

@code {

    // AuthenticationState is available as a CascadingParameter
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    Boolean deleteDialogOpen = false;
    Boolean editDialogOpen = false;
    Boolean addDialogOpen = false;

    SupplierMFG[] supplierMFGs;
    SupplierMFG supplierMFG { get; set; } = new SupplierMFG();

    ConnectionEdi[] connectionEdis;
    ConnectionEdi connectionEdi = null;

    string baseUrl;


    protected override async Task OnInitializedAsync()
    {
        baseUrl = AppSettingsService.GetBaseUrl();
        supplierMFGs = await Http.GetJsonAsync<SupplierMFG[]>(baseUrl + "/api/suppliermfg/get");
        connectionEdis = await Http.GetJsonAsync<ConnectionEdi[]>(baseUrl + "/api/connectionedi/get");
    }

    public void OpenDeleteDialog(string supplierMFGId)
    {
        supplierMFG = supplierMFGs.Where(x => x.Id == supplierMFGId).FirstOrDefault();
        this.deleteDialogOpen = true;
    }

    public void OpenEditDialog(string supplierMFGId)
    {
        supplierMFG = supplierMFGs.Where(x => x.Id == supplierMFGId).FirstOrDefault();
        this.editDialogOpen = true;
    }

    public void OpenAddDialog()
    {
        this.addDialogOpen = true;
    }

    protected async Task Delete()
    {
        await Http.DeleteAsync(baseUrl + "/api/suppliermfg/delete/" + supplierMFG.Id);
        deleteDialogOpen = false;
        supplierMFG = new SupplierMFG();
        await OnInitializedAsync();
    }

    protected async Task Edit()
    {
        await Http.PutJsonAsync(baseUrl + "/api/suppliermfg/edit/" + supplierMFG.Id, supplierMFG);
        editDialogOpen = false;
        supplierMFG = new SupplierMFG();
        await OnInitializedAsync();
    }

    protected async Task Add()
    {
        baseUrl = AppSettingsService.GetBaseUrl();
        await Http.PostJsonAsync(baseUrl + "/api/suppliermfg/create", supplierMFG);
        addDialogOpen = false;
        supplierMFG = new SupplierMFG();
        await OnInitializedAsync();
    }
}
