@using EDI_suppliers.Data

@*@page "/"*@


@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Services.IConnectionService ConnectionService
@inject Services.ISupplierService SupplierService
@inject Services.IPartnerService PartnerService


<h2>Přehled spojení</h2>

@if (connections == null)
{

}
else
{
    <h2>Přehled MFG Dodavatelů</h2>
}


@code {

    // AuthenticationState is available as a CascadingParameter
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    Boolean deleteDialogOpen = false;
    Boolean editDialogOpen = false;
    Boolean addDialogOpen = false;

    List<Supplier> suppliers;
    Supplier supplier = null;
    List<Partner> partners;
    List<Connection> connections;
    Connection connection = new Connection();


    protected override async Task OnInitializedAsync()
    {
        suppliers = await SupplierService.Get();
        partners = await PartnerService.Get();
        connections = await ConnectionService.Get();
    }

    public void OpenDeleteDialog(int connectionId)
    {
        connection = connections.Where(x => x.ConnectionId == connectionId).FirstOrDefault();
        this.deleteDialogOpen = true;
    }

    public void OpenEditDialog(int connectionId)
    {
        connection = connections.Where(x => x.ConnectionId == connectionId).FirstOrDefault();
        this.editDialogOpen = true;
    }

    public void OpenAddDialog()
    {
        this.addDialogOpen = true;
        connection = new Connection();
    }

    protected async Task Delete(int connectionId)
    {
        await ConnectionService.Delete(connectionId);
        deleteDialogOpen = false;
        await OnInitializedAsync();
    }

    protected async Task Edit()
    {
        await ConnectionService.Update(connection);
        editDialogOpen = false;
        await OnInitializedAsync();
    }

    protected async Task Add()
    {
        await ConnectionService.Add(connection);
        addDialogOpen = false;
        await OnInitializedAsync();
    }
}