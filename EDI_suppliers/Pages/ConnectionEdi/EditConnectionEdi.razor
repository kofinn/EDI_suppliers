@using EDI_suppliers.Data

@page "/editconnectionedi/{id}"

@inject CustomHttpClient Http
@inject NavigationManager NavigationManager
@inject AppSettingsService AppSettingsService

<h2>Upravení EDI spojení</h2>

@*<DataAnnotationsValidator />
    <ValidationSummary />*@

<EditForm Model="@connectionEdi" OnValidSubmit="@UpdateConnectionEdi">
    <DataAnnotationsValidator />

    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="Name" class="control-label">Jméno</label>
                <ValidationMessage For="@(() => connectionEdi.Name)" />
                <input for="MfgId" class="form-control" @bind="@connectionEdi.Name" />
            </div>
            <div class="form-group">
                <label for="Connection Type" class="control-label">Typ spojení</label>
                <ValidationMessage For="@(() => connectionEdi.ConnectionType)" />
                <input for="MfgId" class="form-control" @bind="@connectionEdi.ConnectionType" />
            </div>
            <div class="form-group">
                <label for="Calloff" class="control-label">Odvolavky</label>
                <ValidationMessage For="@(() => connectionEdi.Calloff)" />
                <input for="MfgId" type="checkbox" @bind="@connectionEdi.Calloff" />
            </div>
            <div class="form-group">
                <label for="Asn" class="control-label">Dodaci listy</label>
                <ValidationMessage For="@(() => connectionEdi.Asn)" />
                <input for="MfgId" type="checkbox" @bind="@connectionEdi.Asn" />
            </div>
            <div class="form-group">
                <label for="SettingMFG" class="control-label">Nastavení v MFG</label>
                <ValidationMessage For="@(() => connectionEdi.SettingMfg)" />
                <input for="MfgId" type="checkbox" @bind="@connectionEdi.SettingMfg" />
            </div>
            <div class="form-group">
                <label for="SettingEDI" class="control-label">Nastaveni EDI</label>
                <ValidationMessage For="@(() => connectionEdi.SettingEdi)" />
                <input for="MfgId" type="checkbox" @bind="@connectionEdi.SettingEdi" />
            </div>
            <div class="form-group">
                <label for="Remark" class="control-label">Poznámka</label>
                <ValidationMessage For="@(() => connectionEdi.Remark)" />
                <input for="MfgId" class="form-control" @bind="@connectionEdi.Remark" />
            </div>
            <div class="form-group">
                <label for="Gateway" class="control-label">Gateway</label>
                <ValidationMessage For="@(() => connectionEdi.Gateway)" />
                <input for="MfgId" type="checkbox" @bind="@connectionEdi.Gateway" />
            </div>
            <div class="form-group">
                <label for="SSID" class="control-label">SSID</label>
                <ValidationMessage For="@(() => connectionEdi.SSID)" />
                <input for="MfgId" class="form-control" @bind="@connectionEdi.SSID" />
            </div>
            <div class="form-group">
                <label for="SFID" class="control-label">SFID</label>
                <ValidationMessage For="@(() => connectionEdi.SFID)" />
                <input for="MfgId" class="form-control" @bind="@connectionEdi.SFID" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <button type="submit">Uložit</button>
                <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public string id { get; set; }
    string baseUrl;
    
    ConnectionEdi connectionEdi = new ConnectionEdi();
    SupplierMFG[] supplierMFGs;

    protected override async Task OnInitializedAsync()
    {
        baseUrl = AppSettingsService.GetBaseUrl();
        connectionEdi = await Http.GetJsonAsync<ConnectionEdi>(baseUrl + "/api/connectionedi/details/" + id);
    }

        protected async Task UpdateConnectionEdi()
    {
        await Http.PutJsonAsync(baseUrl + "/api/connectionedi/edit/" + id, connectionEdi);
        NavigationManager.NavigateTo("listconnectionedi");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("listconnectionedi");
    }
}   