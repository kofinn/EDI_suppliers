@using EDI_suppliers.Data

@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Services.ISupplierService Service

@if (suppliers == null)
{
}
else
{
    <DataGrid TItem="Supplier"
              Data="@suppliers"
              Editable="true"
              PageSize="999999"
              EditMode="DataGridEditMode.Inline"
              Filterable="true"
              RowInserted="@OnRowInserted"
              RowUpdated="@OnRowUpdated"
              RowRemoved="@OnRowRemoved">
        @if (autorizace == true)
        {
            <DataGridCommandColumn TItem="Supplier">
                <NewCommandTemplate>
                    <Button Color="Color.Success" Clicked="@context.Clicked">New</Button>
                </NewCommandTemplate>
                <EditCommandTemplate>
                    <Button Color="Color.Warning" Clicked="@context.Clicked">Edit</Button>
                </EditCommandTemplate>
                <SaveCommandTemplate>
                    <Button Color="Color.Success" Clicked="@context.Clicked">Save</Button>
                </SaveCommandTemplate>
                <CancelCommandTemplate>
                    <Button Color="Color.Warning" Clicked="@context.Clicked">Cancel</Button>
                </CancelCommandTemplate>
                <DeleteCommandTemplate>
                    <Button Color="Color.Danger" Clicked="@context.Clicked">Delete</Button>
                </DeleteCommandTemplate>
                <ClearFilterCommandTemplate>
                    <Button Color="Color.Info" Clicked="@context.Clicked">Clear Filter</Button>
                </ClearFilterCommandTemplate>
            </DataGridCommandColumn>
        }
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.Plant)" Caption="Závod" Editable="true">
            <EditTemplate>
                <Select TValue="int" SelectedValue="@(( (int)( (CellEditContext)context ).CellValue ))" SelectedValueChanged="@(( v ) => ( (CellEditContext)context ).CellValue = v)">
                    <SelectItem Value="0">P1</SelectItem>
                    <SelectItem Value="1">P2</SelectItem>
                </Select>
            </EditTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.Active)" Caption="Aktivní" Editable="true">
            <DisplayTemplate>
                @{
                    var active = (context as Supplier).Active;

                    if (active == false)
                    {
                        @("NE");
                    }
                    else if (active == true)
                    {
                        @("ANO");
                    }
                }
            </DisplayTemplate>
            <EditTemplate>
                <Select TValue="bool" SelectedValue="@( (bool)( (CellEditContext)context ).CellValue )" SelectedValueChanged="@(( v ) => ( (CellEditContext)context ).CellValue = v)">
                    <SelectItem Value="true">ANO</SelectItem>
                    <SelectItem Value="false">NE</SelectItem>
                </Select>
            </EditTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.MfgId)" Caption="Dodavatelské číslo" Editable="true" />
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.Name)" Caption="Jméno dodavatele" Editable="true" />
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.ContactIt)" Caption="Kontakt IT" Editable="true" />
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.ContactLog)" Caption="Kontakt LOG" Editable="true" />
    </DataGrid>
}

@code {

    [Parameter]
    public bool autorizace { get; set; }


    List<Supplier> suppliers;
    Supplier supplier { get; set; } = new Supplier();


    protected override async Task OnInitializedAsync()
    {
        suppliers = await Service.Get();
    }

    void OnRowInserted(SavedRowItem<Supplier, Dictionary<string, object>> e)
    {
        var supplier = e.Item;
        Service.Add(supplier);
    }

    void OnRowUpdated(SavedRowItem<Supplier, Dictionary<string, object>> e)
    {
        var supplier = e.Item;
        Service.Update(supplier);
    }

    void OnRowRemoved(Supplier supplier)
    {
        //supplierName = supplier.Name;
        //modalDelete.Show();
        Service.Delete(supplier.SupplierId);
    }
}
