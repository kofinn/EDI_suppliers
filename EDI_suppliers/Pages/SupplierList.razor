@using EDI_suppliers.Data

@*@page "/supplierlist"*@

@page "/"

@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Services.ISupplierService Service

<h2>Přehled MFG Dodavatelů</h2>

@if (suppliers == null)
{
}
else
{
    <DataGrid TItem="Supplier"
              Data="@suppliers"
              EditMode="DataGridEditMode.Inline"
              Filterable="true">
        <DataGridCommandColumn TItem="Supplier" />
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.Plant)" Caption="Závod" Editable="true" />
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.MfgId)" Caption="Dodavatelské číslo" Editable="true" />
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.Name)" Caption="Jméno dodavatele" Editable="true" />
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.ContactIt)" Caption="Kontakt IT" Editable="true" />
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.ContactLog)" Caption="Kontakt LOG" Editable="true">
        </DataGridColumn>
    </DataGrid>
}

@code {

    // AuthenticationState is available as a CascadingParameter
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    Boolean deleteDialogOpen = false;
    Boolean editDialogOpen = false;
    Boolean addDialogOpen = false;

    List<Supplier> suppliers;
    Supplier supplier { get; set; } = new Supplier();


    protected override async Task OnInitializedAsync()
    {
        suppliers = await Service.Get();
    }

    public void OpenDeleteDialog(int supplierId)
    {
        supplier = suppliers.Where(x => x.SupplierId == supplierId).FirstOrDefault();
        this.deleteDialogOpen = true;
    }

    public void OpenEditDialog(int supplierId)
    {
        supplier = suppliers.Where(x => x.SupplierId == supplierId).FirstOrDefault();
        this.editDialogOpen = true;
    }

    public void OpenAddDialog()
    {
        this.addDialogOpen = true;
        supplier = new Supplier();
    }

    protected async Task Delete(int supplierId)
    {
        await Service.Delete(supplierId);
        deleteDialogOpen = false;
        await OnInitializedAsync();
    }

    protected async Task Edit()
    {
        await Service.Update(supplier);
        editDialogOpen = false;
        await OnInitializedAsync();
    }

    protected async Task Add()
    {
        await Service.Add(supplier);
        addDialogOpen = false;
        await OnInitializedAsync();
    }
}
