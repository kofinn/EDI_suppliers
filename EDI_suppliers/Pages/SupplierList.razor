@using EDI_suppliers.Data

@page "/supplierlist"

@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Services.ISupplierService Service

<h2>Přehled MFG Dodavatelů</h2>

@if (suppliers == null)
{
    <MatProgressBar Indeterminate="true"></MatProgressBar>
}
else
{
    <MatTable Items="@suppliers" class="mat-elevation" LoadInitialData="true" Striped="true" AllowSelection="true" ShowFooter="false" ShowPaging="false" PageSize="999999">
        <MatTableHeader>
            <th>Závod</th>
            <th>Číslo dodavatele</th>
            <th>Jméno dodavatele</th>
            <th>Kontakt IT</th>
            <th>Kontakt Log</th>
            <th>Akce</th>
        </MatTableHeader>
        <MatTableRow Context="supplierRow">
            <td>@supplierRow.Plant</td>
            <td>@supplierRow.MfgId</td>
            <td>@supplierRow.Name</td>
            <td>@supplierRow.ContactIt</td>
            <td>@supplierRow.ContactLog</td>
            <td>
                <MatIconButton Icon="edit" OnClick="@(() => OpenEditDialog(supplierRow.SupplierId))"></MatIconButton>
                <MatIconButton Icon="delete" OnClick="@(() => OpenDeleteDialog(supplierRow.SupplierId))"></MatIconButton>
            </td>
        </MatTableRow>
    </MatTable>

    <MatIconButton Icon="add" OnClick="@(() => OpenAddDialog())"></MatIconButton>

    <MatDialog @bind-IsOpen="@deleteDialogOpen" Style="z-index:100">
        <MatDialogTitle><MatIcon Icon="warning"></MatIcon> Potvrďte vymazání</MatDialogTitle>
        <MatDialogContent>
            Opravdu chcete vymazat dodavatele "@supplier.MfgId" ?
        </MatDialogContent>
        <MatDialogActions>
            <MatButton OnClick="@(e => { deleteDialogOpen = false; })">Zpět</MatButton>
            <MatButton OnClick="@(() => Delete(supplier.SupplierId))">Vymazat</MatButton>
        </MatDialogActions>
    </MatDialog>

    <MatDialog @bind-IsOpen="@editDialogOpen" Style="z-index:100">
        <MatDialogTitle><MatIcon Icon="edit"></MatIcon> Úprava záznamu</MatDialogTitle>
        <MatDialogContent>
            <EditForm Model="@supplier" OnValidSubmit="@Edit">
                <DataAnnotationsValidator />
                <p>
                    <MatSelect Label="Závod" @bind-Value="@supplier.Plant">
                        <MatOptionString Value="P1">P1</MatOptionString>
                        <MatOptionString Value="P2">P2</MatOptionString>
                    </MatSelect>
                </p>
                <p>
                    <MatTextField Label="Dodavatelské číslo MFG" @bind-Value="@supplier.MfgId" />
                    <ValidationMessage For="@(() => supplier.MfgId)" />
                </p>
                <p>
                    <MatTextField Label="Jméno dodavatele" @bind-Value="@supplier.Name" />
                    <ValidationMessage For="@(() => supplier.Name)" />
                </p>
                <p>
                    <MatTextField Label="Kontakt IT" @bind-Value="@supplier.ContactIt" />
                    <ValidationMessage For="@(() => supplier.ContactIt)" />
                </p>
                <p>
                    <MatTextField Label="Kontakt Logistika" @bind-Value="@supplier.ContactLog" />
                    <ValidationMessage For="@(() => supplier.ContactLog)" />
                </p>
                <MatButton Type="submit" Raised="true">Upravit</MatButton>
                <MatButton OnClick="@(async e => { editDialogOpen = false; await OnInitializedAsync();})">Zpět</MatButton>
            </EditForm>
        </MatDialogContent>
        @*<MatDialogActions>
                <MatButton OnClick="@(e => { editDialogOpen = false; })">Zpět</MatButton>
                <MatButton OnClick="@Edit">Upravit</MatButton>
            </MatDialogActions>*@
    </MatDialog>

    <MatDialog @bind-IsOpen="@addDialogOpen" Style="z-index:100">
        <MatDialogTitle><MatIcon Icon="add"></MatIcon> Vytvoření záznamu</MatDialogTitle>
        <MatDialogContent>
            <EditForm Model="@supplier" OnValidSubmit="@Add">
                <DataAnnotationsValidator />
                <p>
                    <MatSelect Label="Závod" @bind-Value="@supplier.Plant">
                        <MatOptionString Value="P1">P1</MatOptionString>
                        <MatOptionString Value="P2">P2</MatOptionString>
                    </MatSelect>
                    <ValidationMessage For="@(() => supplier.Plant)" />
                </p>
                <p>
                    <MatTextField Label="Dodavatelské číslo MFG" @bind-Value="@supplier.MfgId" />
                    <ValidationMessage For="@(() => supplier.MfgId)" />
                </p>
                <p>
                    <MatTextField Label="Jméno dodavatele" @bind-Value="@supplier.Name" />
                    <ValidationMessage For="@(() => supplier.Name)" />
                </p>
                <p>
                    <MatTextField Label="Kontakt IT" @bind-Value="@supplier.ContactIt" />
                    <ValidationMessage For="@(() => supplier.ContactIt)" />
                </p>
                <p>
                    <MatTextField Label="Kontakt Logistika" @bind-Value="@supplier.ContactLog" />
                    <ValidationMessage For="@(() => supplier.ContactLog)" />
                </p>
                <MatButton Type="submit" Raised="true">Vytvořit</MatButton>
                <MatButton OnClick="@(async e => { addDialogOpen = false; await OnInitializedAsync();  })">Zpět</MatButton>
            </EditForm>
        </MatDialogContent>
        @*<MatDialogActions>
                <MatButton OnClick="@(e => { addDialogOpen = false; })">Zpět</MatButton>
                <MatButton OnClick="@Add">Vytvořit</MatButton>
            </MatDialogActions>*@
    </MatDialog>


}

@code {

    // AuthenticationState is available as a CascadingParameter
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    Boolean deleteDialogOpen = false;
    Boolean editDialogOpen = false;
    Boolean addDialogOpen = false;


    Supplier supplier { get; set; } = new Supplier();
    List<Supplier> suppliers;

    protected override async Task OnInitializedAsync()
    {
        suppliers = await Service.Get();
    }

    public void OpenDeleteDialog(int supplierId)
    {
        supplier = suppliers.Where(x => x.SupplierId == supplierId).FirstOrDefault();
        this.deleteDialogOpen = true;
    }

    public void OpenEditDialog(int supplierId)
    {
        supplier = suppliers.Where(x => x.SupplierId == supplierId).FirstOrDefault();
        this.editDialogOpen = true;
    }

    public void OpenAddDialog()
    {
        this.addDialogOpen = true;
        supplier = new Supplier();
    }

    protected async Task Delete(int supplierId)
    {
        await Service.Delete(supplierId);
        deleteDialogOpen = false;
        await OnInitializedAsync();
    }

    protected async Task Edit()
    {
        await Service.Update(supplier);
        editDialogOpen = false;
        await OnInitializedAsync();
    }

    protected async Task Add()
    {
        await Service.Add(supplier);
        addDialogOpen = false;
        await OnInitializedAsync();
    }
}
