@using EDI_suppliers.Data

@page "/supplierlist"

@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Services.ISupplierService Service

<h2>Přehled MFG Dodavatelů</h2>

@if (suppliers == null)
{
}
else
{
    <DataGrid TItem="Supplier"
              Data="@suppliers"
              Editable="true"
              PageSize="999999"
              EditMode="DataGridEditMode.Inline"
              Filterable="true"
              RowInserted="@OnRowInserted"
              RowUpdated="@OnRowUpdated"
              RowRemoved="@OnRowRemoved">              
        <DataGridCommandColumn TItem="Supplier">
            <NewCommandTemplate>
                <Button Color="Color.Success" Clicked="@context.Clicked">New</Button>
            </NewCommandTemplate>
            <EditCommandTemplate>
                <Button Color="Color.Warning" Clicked="@context.Clicked">Edit</Button>
            </EditCommandTemplate>
            <SaveCommandTemplate>
                <Button Color="Color.Success" Clicked="@context.Clicked">Save</Button>
            </SaveCommandTemplate>
            <CancelCommandTemplate>
                <Button Color="Color.Warning" Clicked="@context.Clicked">Cancel</Button>
            </CancelCommandTemplate>
            <DeleteCommandTemplate>
                <Button Color="Color.Danger" Clicked="@context.Clicked">Delete</Button>
            </DeleteCommandTemplate>
            <ClearFilterCommandTemplate>
                <Button Color="Color.Info" Clicked="@context.Clicked">Clear Filter</Button>
            </ClearFilterCommandTemplate>
        </DataGridCommandColumn>
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.Plant)" Caption="Závod" Editable="true">
            <EditTemplate>
                <SelectEdit TValue="int" SelectedValue="@(( (int)( (CellEditContext)context ).CellValue ))" SelectedValueChanged="@(( v ) => ( (CellEditContext)context ).CellValue = v)">
                        <SelectItem Value="0">P1</SelectItem>
                        <SelectItem Value="1">P2</SelectItem>
                </SelectEdit>
            </EditTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.MfgId)" Caption="Dodavatelské číslo" Editable="true" />
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.Name)" Caption="Jméno dodavatele" Editable="true" />
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.ContactIt)" Caption="Kontakt IT" Editable="true" />
        <DataGridColumn TItem="Supplier" Field="@nameof(Supplier.ContactLog)" Caption="Kontakt LOG" Editable="true"/>
    </DataGrid>


    <Modal @ref="modalDelete">
        <ModalBackdrop />
        <ModalContent IsCentered="true">
            <ModalHeader>
                <ModalTitle>Vymazaní</ModalTitle>
                <CloseButton Clicked="@HideModal" />
            </ModalHeader>
            <ModalBody>
                <Field>
                    <FieldLabel>Opravdu si přejete vymazat @supplierName</FieldLabel>
                </Field>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="@HideModal">Ne</Button>
                <Button Color="Color.Primary" Clicked="@HideModal">Ano</Button>
            </ModalFooter>
        </ModalContent>
    </Modal>
}

@code {

    // AuthenticationState is available as a CascadingParameter
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    // reference to the modal component
    private Modal modalDelete;

    private void ShowModal()
    {
        modalDelete.Show();
    }

    private void HideModal()
    {
        modalDelete.Hide();
    }

    List<Supplier> suppliers;
    Supplier supplier { get; set; } = new Supplier();
    string supplierName;


    protected override async Task OnInitializedAsync()
    {
        suppliers = await Service.Get();
    }

    void OnRowInserted(SavedRowItem<Supplier, Dictionary<string, object>> e)
    {
        var supplier = e.Item;
        Service.Add(supplier);
    }

    void OnRowUpdated(SavedRowItem<Supplier, Dictionary<string, object>> e)
    {
        var supplier = e.Item;
        Service.Update(supplier);
    }

    void OnRowRemoved(Supplier supplier)
    {
        //supplierName = supplier.Name;
        //modalDelete.Show();
        Service.Delete(supplier.SupplierId);
    }
}
